name: Alembic Migrations

on: 
  workflow_dispatch:
    inputs:
      databaseUri:
        description: 'Database URI'
        required: true
        default: 'default for branch'
      databaseSchema:
        description: 'Schema (ex: pipeline, dock, dockEvents).  Leave blank if inputting custom URI'
      revisionId:
        description: 'Revision ID'
        required: true
        default: 'head'

jobs:
  alembic-upgrade:
    name: Alembic Migrations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.8]
  
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install Open VPN
        run: sudo apt-get install openvpn

      - name: Write .ovpn file
        run: echo "${{  secrets.CONFIG_OVPN  }}" > .github/vpn/config.ovpn
      
      - name: Connect to VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        env:
          CA_CRT: ${{  secrets.CA_CRT  }}
          USER_CRT: ${{  secrets.USER_CRT  }}
          USER_KEY: ${{  secrets.USER_KEY  }}
        with:
          FILE_OVPN: '.github/vpn/config.ovpn'
          PING_URL: '127.0.0.1'

      - name: Check VPN Connection Status
        run: echo ${{  steps.connect_vpn.outputs.STATUS  }}

      - name: Install dependencies
        run: pip install -r .github/requirements.txt

      - name: prod Enviroment
        if: github.ref == 'refs/heads/master'
        run: |
          echo "MAPPED_DATABASE_URI=${{  secrets.MASTER_CONNECTION_STRING  }}" >> $GITHUB_ENV

      - name: staging Enviroment
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "MAPPED_DATABASE_URI=${{  secrets.STAGING_CONNECTION_STRING  }}" >> $GITHUB_ENV

      - name: dev Enviroment
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "MAPPED_DATABASE_URI=${{  secrets.DEV_CONNECTION_STRING  }}" >> $GITHUB_ENV

      - name: dev3 Enviroment
        if: github.ref == 'refs/heads/dev3'
        run: |
          echo "MAPPED_DATABASE_URI=${{  secrets.DEV3_CONNECTION_STRING  }}" >> $GITHUB_ENV

      - name: dev4 Enviroment
        if: github.ref == 'refs/heads/dev4'
        run: |
          echo "MAPPED_DATABASE_URI=${{  secrets.DEV4_CONNECTION_STRING  }}" >> $GITHUB_ENV

      - name: Determine which Alembic revision to jump to
        env:
          INPUT_DATABASE_URI: github.event.inputs.databaseUri
          INPUT_REVISION_ID: github.event.inputs.revisionId
        run: |
          # Exit if inputs not set
          if [ -z $MAPPED_DATABASE_URI ] && [ -z $INPUT_DATABASE_URI ]
          then
            echo "Not in a preconfigured branch, Database URI must therefore be input" <&2
            exit 1
          fi

          # Builds the correct INPUT_DATABASE_URI if necessary
          if [ "${INPUT_DATABASE_URI}" == "default for branch" ]
          then
            INPUT_DATABASE_URI="${MAPPED_DATABASE_URI}/${INPUT_DATABASESCHEMA}"
          fi
          export INPUT_DATABASE_URI

          python3 .github/alembic_revisions.py

      - name: Kill VPN Connection
        run: killall openvpn

