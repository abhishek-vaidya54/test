name: Alembic Migrations

on: 
  push:
    branches:
      - alembic-release
  workflow_dispatch:
    inputs:
      databaseUri:
        description: 'Database URI'
        required: true
      revisionId:
        description: 'Revision ID'
        required: true
        default: 'head'

jobs:
  alembic-upgrade:
    name: Alembic Migrations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.8]
  
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install Open VPN
        run: sudo apt-get install openvpn
      
      - name: Connect to VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        env:
          CA_CRT: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLekNDQWhPZ0F3SUJBZ0lKQU82NnovT2pNckxCTUEwR0NTcUdTSWIzRFFFQkN3VUFNQk14RVRBUEJnTlYKQkFNTUNFTm9ZVzVuWlUxbE1CNFhEVEU0TURReU5ERTRNVEl6TlZvWERUSTRNRFF5TVRFNE1USXpOVm93RXpFUgpNQThHQTFVRUF3d0lRMmhoYm1kbFRXVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCCkFRQzJJS01VOTg3emlua0hycXhzelU3bjlIN1hyT2czNzNybXJDb0xnTEJzVHQxb2REUEc3WWNJNGIxOFZ5RjQKdUJtbWMycG9lWFhhcXFQdmMrTUgxcDVwN0syMnBlZEFsMWdMY2FIZ0VVSWxBUi9XU3gyZzJBbnJrUlN4cHJmdApUdU1WeWVjNGd1TlVOTmRZRkJkSE1hTENzMjVZMmxkTndjMEFQM1JVNGhkS0tuVzZFaTQzaTFCNmp5bHpQM1JKCm5rU21zenVJWXd3MVY1UnBQNXp0MHN2dTdQT1cxYnpYbmJVcDZ5bys3Y2s0OGZTTWVLbmRQamFQZEFZUWR5N3kKRzJNanFMakVuZThBQTU4bTBaU0tqQ0FtZk4wS25nY3pYZFpwR2toZUh0UlpZcDdGZ2I5RDQxLzJnY1BvcmwzVgp0T0R5bFRaZE5CTFJKTXBLQlJKaU1lR3JBZ01CQUFHamdZRXdmekFkQmdOVkhRNEVGZ1FVSmt5NVIxeWN1VVN2CjNFVzJxRGV0bUZrYTZLMHdRd1lEVlIwakJEd3dPb0FVSmt5NVIxeWN1VVN2M0VXMnFEZXRtRmthNksyaEY2UVYKTUJNeEVUQVBCZ05WQkFNTUNFTm9ZVzVuWlUxbGdna0E3cnJQODZNeXNzRXdEQVlEVlIwVEJBVXdBd0VCL3pBTApCZ05WSFE4RUJBTUNBUVl3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNZaEtENG96cFlNeVR1aDhiN2I3VzRiClhKK050NEhNU2xxdmJOVEppL05XMW1GY0hPWHgzWVNPSnF1ZEdVejl6QlhQMEZxU0xZalVxWFZaRUQ3bWlLTzAKK2xwSi9aaG1xU3dLK081aitsTjdEY1loVU1XYTFXREl6M3JHODlXdUxEVGp1NHpKTXA5c3cyb3dhb3EyelljUgpjMHFyRE1ab0RMZk5zY2xBakprYm04RjRSdFZHejNUYkpPZmZQSzNDcWtuRmxuNG5uenRBWitkWUR3MWg0STMyCjArRUVCdlc0NDVZRSsrUWNnM2tIT29PWSswb3haK0FFRzJ0eFJjRndJT1ZHTFVzSGV0YUxtUlRNU0VVcFlNQ3gKemx4VExKbmxJRUZIcHZmRkN4dGZReXZ3S3REYXhXZlBQUVNtcFBkMy9CZlhlYTNqb1dVNkcwL3RDeW10YURRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
          USER_CRT: Q2VydGlmaWNhdGU6CiAgICBEYXRhOgogICAgICAgIFZlcnNpb246IDMgKDB4MikKICAgICAgICBTZXJpYWwgTnVtYmVyOiA1MSAoMHgzMykKICAgICAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgIElzc3VlcjogQ049Q2hhbmdlTWUKICAgICAgICBWYWxpZGl0eQogICAgICAgICAgICBOb3QgQmVmb3JlOiBKdWwgMTUgMTc6MDY6MzkgMjAyMCBHTVQKICAgICAgICAgICAgTm90IEFmdGVyIDogSnVsIDEzIDE3OjA2OjM5IDIwMzAgR01UCiAgICAgICAgU3ViamVjdDogQ049YWxpCiAgICAgICAgU3ViamVjdCBQdWJsaWMgS2V5IEluZm86CiAgICAgICAgICAgIFB1YmxpYyBLZXkgQWxnb3JpdGhtOiByc2FFbmNyeXB0aW9uCiAgICAgICAgICAgICAgICBSU0EgUHVibGljLUtleTogKDIwNDggYml0KQogICAgICAgICAgICAgICAgTW9kdWx1czoKICAgICAgICAgICAgICAgICAgICAwMDpjMDo2NzoyZDoyYjo1YjozZDowNTplNDpjODo2OTowNDo5ODo1Mzo0NToKICAgICAgICAgICAgICAgICAgICBmNTpjOTpiMzphYjo4NzowYjoyYTpkYjo2NDoyZTo3ODowODo0ZDpjYzoyNToKICAgICAgICAgICAgICAgICAgICA4MDoxMjphMDo0NjplMDowMjo4ZDo3OToxMzpjYjo1ODo4NzpkZTo1Yzo0NjoKICAgICAgICAgICAgICAgICAgICAxYzo3NTplNjoxYjoxZjphYjo2Zjo2MToxZDo1ZDo1NDpiOTpjNTowNzozNjoKICAgICAgICAgICAgICAgICAgICA2OTo5ODo0ZDoyZDo1YTo1YTo3ZDphMzowZDphYjo4YTpmNDo3Mjo1MDphODoKICAgICAgICAgICAgICAgICAgICA2ZDpjNzpkZTo4NDphMjo4NDoyNzo2YjpmNjoxZjpkMDozMjoxMzo3YTphZjoKICAgICAgICAgICAgICAgICAgICAzZDo0OTo0Mzo3MjozNjphMDo1NDphMDowNTo0NzplYjo4ZDpjMDpkNzo4NzoKICAgICAgICAgICAgICAgICAgICA0ZjpkMzo3MTpkMDpkMDpjYzpmMjphNDozOTpkNDpmZDpkMjpkZDpjZDo3ZjoKICAgICAgICAgICAgICAgICAgICA2Yzo1ODpiZTo1Zjo0MDo4MTo4Yjo2OTo3Nzo5Mjo5YjoyZDowZjozZTo1YToKICAgICAgICAgICAgICAgICAgICA5YzoyZTo3ZDo2NDo2ZTphMzo0ODpiNDowMTo4ZTo4Zjo4ZDo5YjpiYzo2ODoKICAgICAgICAgICAgICAgICAgICAxOTpkNjo2NDpjODo1Yzo0ZDoxNjpjODo5ODo3MDo1YzowNjo4YToyNDplMjoKICAgICAgICAgICAgICAgICAgICA0YjpmOTozNDphODpmMDo0NDpmODowNTo5NzphMzpjZTo4MzpjZjpmZjo0MToKICAgICAgICAgICAgICAgICAgICAyYzo4ZTo3ODo0NDo2YTowNTplZTozZTo5NDphYTo1NjpkNDplMjpkMDozYjoKICAgICAgICAgICAgICAgICAgICA3YTphNzo5Yzo1Yzo0MDo0MjpjNzpjOTplMToxYzphNTo3OToyNTo1YjplZjoKICAgICAgICAgICAgICAgICAgICAwNDpjNjoxMjo0NDplZDozZTo2Zjo4ZjpkOToxZDo0MzozNTpmZToyNzowZDoKICAgICAgICAgICAgICAgICAgICAzMDpjZTo5ODphZTo5YToxYjpmMToyMjoyMToyODoxMjpmYTpkMjo2Nzo2MjoKICAgICAgICAgICAgICAgICAgICA1Yjo0ODozMDpmOTo5YTpkNTo5Mjo3MjpjZDo2MzplNzpmZDpkZDplYzo5NDoKICAgICAgICAgICAgICAgICAgICA0NzplZAogICAgICAgICAgICAgICAgRXhwb25lbnQ6IDY1NTM3ICgweDEwMDAxKQogICAgICAgIFg1MDl2MyBleHRlbnNpb25zOgogICAgICAgICAgICBYNTA5djMgQmFzaWMgQ29uc3RyYWludHM6CiAgICAgICAgICAgICAgICBDQTpGQUxTRQogICAgICAgICAgICBYNTA5djMgU3ViamVjdCBLZXkgSWRlbnRpZmllcjoKICAgICAgICAgICAgICAgIDRCOjgzOkJDOjhCOjU5OkMxOjBFOjlCOkJGOkQ1OjcwOkE2OjFGOkQ4OjFDOjg2OjI3OkNDOkQxOjIxCiAgICAgICAgICAgIFg1MDl2MyBBdXRob3JpdHkgS2V5IElkZW50aWZpZXI6CiAgICAgICAgICAgICAgICBrZXlpZDoyNjo0QzpCOTo0Nzo1Qzo5QzpCOTo0NDpBRjpEQzo0NTpCNjpBODozNzpBRDo5ODo1OToxQTpFODpBRAogICAgICAgICAgICAgICAgRGlyTmFtZTovQ049Q2hhbmdlTWUKICAgICAgICAgICAgICAgIHNlcmlhbDpFRTpCQTpDRjpGMzpBMzozMjpCMjpDMQogICAgICAgICAgICBYNTA5djMgRXh0ZW5kZWQgS2V5IFVzYWdlOgogICAgICAgICAgICAgICAgVExTIFdlYiBDbGllbnQgQXV0aGVudGljYXRpb24KICAgICAgICAgICAgWDUwOXYzIEtleSBVc2FnZToKICAgICAgICAgICAgICAgIERpZ2l0YWwgU2lnbmF0dXJlCiAgICBTaWduYXR1cmUgQWxnb3JpdGhtOiBzaGEyNTZXaXRoUlNBRW5jcnlwdGlvbgogICAgICAgICBhZToxYjo0NDplYTowNTpiNjo4YTo3MjplYzoyZDplYTo1ZTo5MzpmYjo1MzpiYTpmMzoyODoKICAgICAgICAgODI6YzE6YTU6N2E6ZjQ6NDY6Y2Y6OWU6ZmQ6NGM6OTA6NDM6NjU6NGY6YjY6NWU6M2Y6OGI6CiAgICAgICAgIDYyOjkxOjgzOjJkOmQyOjQ5OjNjOjQzOjMxOmY1OmE2OmRlOmZkOmQ2OjM2OmYzOjQxOmNjOgogICAgICAgICAzYjoyOTpjMzo2ZTo4MDo3ODo2OTowNzo3MzozMTo2MDo1NDpkZDo2ODozNzo4NjphMTowODoKICAgICAgICAgODE6M2Y6MzY6OWI6MmE6NzM6Yzc6NDE6MTM6Y2I6M2Q6ZTg6ZDE6YTE6MTI6ZDU6YmM6YzI6CiAgICAgICAgIGQ4OjJkOmNhOjExOjQ2OjNmOjY1OjI4OmQ2OmVhOjU5OjlkOjBkOjcxOjMwOjljOjcyOjM2OgogICAgICAgICA4YjozMDpiNjpkNDozNTowZjpkOTpiYTpkMjo5ZTo5Yzo3OTozNjo2Mjo4NzpmNTpkNjoyMDoKICAgICAgICAgNDY6NjQ6MjQ6MmE6OTk6MmY6ZDc6Njk6ODI6NmQ6OWQ6Y2M6OWY6MTY6M2M6ZDA6NjQ6ZTg6CiAgICAgICAgIDFlOjBlOjQ2OjQ5Ojc3OmIzOmMxOmI0Ojc2OmZmOjI0OjRkOjk2OjEzOjFjOjU4OmE1OjYyOgogICAgICAgICBkOToyMDpiZTpiNjpmODo2Mzo4NzowMjowNTpiMToxMzo5Yzo0OTpmYjo0OTpkMTpmZTozMToKICAgICAgICAgMTU6MWE6ZjY6ZjU6MDA6N2Q6ZDE6Mjg6ZDI6ZWM6NWE6YmM6NmQ6NDI6NDU6ZDc6OTk6Yzk6CiAgICAgICAgIDkyOjUzOjJlOmJjOmFjOmI0OmI4OjYxOjdiOjEzOmU2OjdkOmFjOmM1OjliOjA0OmU0OmYyOgogICAgICAgICBkZjpjNjowNDo4YzpkMTo2NDpkMzpmNDo1MDowODowMjo4Njo2OToxMDpjMTpmNzpmMTo4NjoKICAgICAgICAgOTA6NzU6OTM6OTk6YmI6MGM6MmE6MTU6Yzk6YTY6Y2M6MWE6Y2I6Nzg6M2M6OTE6NDM6Y2M6CiAgICAgICAgIDRlOmE0Ojg1OmM5Ci0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETVRDQ0FobWdBd0lCQWdJQk16QU5CZ2txaGtpRzl3MEJBUXNGQURBVE1SRXdEd1lEVlFRRERBaERhR0Z1CloyVk5aVEFlRncweU1EQTNNVFV4TnpBMk16bGFGdzB6TURBM01UTXhOekEyTXpsYU1BNHhEREFLQmdOVkJBTU0KQTJGc2FUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1CbkxTdGJQUVhreUdrRQptRk5GOWNtenE0Y0xLdHRrTG5nSVRjd2xnQktnUnVBQ2pYa1R5MWlIM2x4R0hIWG1HeCtyYjJFZFhWUzV4UWMyCmFaaE5MVnBhZmFNTnE0cjBjbENvYmNmZWhLS0VKMnYySDlBeUUzcXZQVWxEY2phZ1ZLQUZSK3VOd05lSFQ5TngKME5ETThxUTUxUDNTM2MxL2JGaStYMENCaTJsM2twc3REejVhbkM1OVpHNmpTTFFCam8rTm03eG9HZFpreUZ4TgpGc2lZY0Z3R2lpVGlTL2swcVBCRStBV1hvODZEei85QkxJNTRSR29GN2o2VXFsYlU0dEE3ZXFlY1hFQkN4OG5oCkhLVjVKVnZ2Qk1ZU1JPMCtiNC9aSFVNMS9pY05NTTZZcnBvYjhTSWhLQkw2MG1kaVcwZ3crWnJWa25MTlkrZjkKM2V5VVIrMENBd0VBQWFPQmxEQ0JrVEFKQmdOVkhSTUVBakFBTUIwR0ExVWREZ1FXQkJSTGc3eUxXY0VPbTcvVgpjS1lmMkJ5R0o4elJJVEJEQmdOVkhTTUVQREE2Z0JRbVRMbEhYSnk1UksvY1JiYW9ONjJZV1Jyb3JhRVhwQlV3CkV6RVJNQThHQTFVRUF3d0lRMmhoYm1kbFRXV0NDUUR1dXMvem96S3l3VEFUQmdOVkhTVUVEREFLQmdnckJnRUYKQlFjREFqQUxCZ05WSFE4RUJBTUNCNEF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUs0YlJPb0Z0b3B5N0MzcQpYcFA3VTdyektJTEJwWHIwUnMrZS9VeVFRMlZQdGw0L2kyS1JneTNTU1R4RE1mV20zdjNXTnZOQnpEc3B3MjZBCmVHa0hjekZnVk4xb040YWhDSUUvTnBzcWM4ZEJFOHM5Nk5HaEV0Vzh3dGd0eWhGR1AyVW8xdXBablExeE1KeHkKTm9zd3R0UTFEOW02MHA2Y2VUWmloL1hXSUVaa0pDcVpMOWRwZ20yZHpKOFdQTkJrNkI0T1JrbDNzOEcwZHY4awpUWllUSEZpbFl0a2d2cmI0WTRjQ0JiRVRuRW43U2RIK01SVWE5dlVBZmRFbzB1eGF2RzFDUmRlWnlaSlRMcnlzCnRMaGhleFBtZmF6Rm13VGs4dC9HQkl6UlpOUDBVQWdDaG1rUXdmZnhocEIxazVtN0RDb1Z5YWJNR3N0NFBKRkQKekU2a2hjaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
          USER_KEY: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV3QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktvd2dnU21BZ0VBQW9JQkFRREFaeTByV3owRjVNaHAKQkpoVFJmWEpzNnVIQ3lyYlpDNTRDRTNNSllBU29FYmdBbzE1RTh0WWg5NWNSaHgxNWhzZnEyOWhIVjFVdWNVSApObW1ZVFMxYVduMmpEYXVLOUhKUXFHM0gzb1NpaENkcjloL1FNaE42cnoxSlEzSTJvRlNnQlVmcmpjRFhoMC9UCmNkRFF6UEtrT2RUOTB0M05mMnhZdmw5QWdZdHBkNUtiTFE4K1dwd3VmV1J1bzBpMEFZNlBqWnU4YUJuV1pNaGMKVFJiSW1IQmNCb29rNGt2NU5LandSUGdGbDZQT2c4Ly9RU3lPZUVScUJlNCtsS3BXMU9MUU8zcW5uRnhBUXNmSgo0UnlsZVNWYjd3VEdFa1R0UG0rUDJSMUROZjRuRFRET21LNmFHL0VpSVNnUyt0Sm5ZbHRJTVBtYTFaSnl6V1BuCi9kM3NsRWZ0QWdNQkFBRUNnZ0VCQUxlRnN1QVlOeXpYL1JHdkFGenQ3blJtbk1aRE1LM3o4Ujh0VElmZGZUeEgKQlZQSEc0clNCclI3Wk80L01nYURabnZlMm02WHc5NTlGQ0s5RkJ2aUFkQ2RZQm1YZ0hrYWthKzkrSGtkRndhdApaNnpqSjVVL0xyVm5VZDRBSjRGVGpXVFZwTFJha2djRFduRWxyemg3UlRiQXN4a3BlY2Y2TXk2eTU4aHZ5THJmClc3NFhYamQ1T3NtRVFLcnJ0Z2diTVB5dzdBN1hIdlVNSlBrbHFYYzR6Ni9nNlgwZjhOeGpYaEsvOGFqa3dTcUsKWVhMRWtBT2J4WSt5eEViRFRJVEE5YnUxQnlkbzNXbzNOUm1ROHNmZ2JFcktnTXhybkRlTkNHdzVuOUdSdVlSTAowT0UyYjBldVBaVitLWnFtWk5ZSkhsTFExNDZPamlXQ0VoZjVFdVd1cWdFQ2dZRUE0K3dDS2xVUlhYaDFueklLCjExWVNwcFF0RVBTRVhNbmpHMDJ2Mm8yYUI1WkIyZkRaOTU3YXhIQmJYTUJLc2pYclZ5NmUraU1WSlpQRDkyV2oKZ3Q5UU1uYzNsTWVETFZEbURjVjJxdFg2QWVqbjlJRWxiRDFBdjloNUJCQ045OWd4M0VTaDhwSDRyMlNzdFVmWgplMzRKVFNqMDlmMmVpQWhhYy9GY1h3aGxFWFVDZ1lFQTJCc0JvU293ZDhWTkhqaU1RR2ZCdVNwN0N4T2ZKUHdVCmlkbHVZQldpMkVIL2pqUmpGbkxHS1BKVEZNZk1CSm5MRW90cWptR0Nxa29ScUQ3dVVyNnY1REM5WWc2TjdTTUsKa0NVRmphLzNmT2lNZkw5bk5YU25oZkNpYktEOTBKNmtkMGRMNmJXV256b0lSZCswWUV2RnZaeEJyQlBKa0lhTwp3UEVsaTk2OVZaa0NnWUVBazFYVVRJTXpONFlRR3ZuaGNqUXMyRXYvR2UvR3hLaXBTOVFiY3ArSXk1REJQdDVvCk9KOFM4bHRqWkFEV0NIKzhnMTRhM0wzakJLaVJ6SktDY2E1a0RFdHV2WmwvWGNMbkJFMzZtUks3aTVLQXAxajQKMVJCL2s4U2U3aGE1ZjFiZFhITnRjUDRWa1dQMkZUVytEQXQ4ZmNtVkdKTjdjSnBkeG9kbTIvUDBTYVVDZ1lFQQppcGh2YUJ3MXIycXpOZEdRYVhIaHRVNkFVUzlKWHAvbzBDdkpkUWdMUTJTNGNFdzZ6RmZack1NVTgzdmI1WXQ0CnlMRHZLdGR3eEtQeVJSUHZKdFF5M0VkQi9sUlZRNk80ajQrZXl5cnlyNEk1TDN4VnhkdkY0TW5lY1lxaW5aeFEKNEVxeWJmWE8zdG1LR3I0STRjVlcwVzhZVXpMeGo2WXNnYU5tc0JpdkZ1a0NnWUVBbE96L3JSakFqZURHYVhTbgpBNjBOZUFhdzZPVXZBNm0xWndxSkYyVjdVU1E1RHdHTm4rdlNuVzc2SjRGU2ttdHdmUmFsbzNTRi9HZFFQeEIyCld4SjJJS0FpZFR2VEIwQXlLOHlIRGE3a0xPTXlTZXRQWDY2TlAvMk1iU0JwTFp4bVlVV2FUdEFNUzJGK0RVU1QKM3hmNGtvRlJaemlnTjArbnpOamZOQlhUaFJzPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
        with:
          FILE_OVPN: '.github/vpn/config.ovpn'
          PING_URL: '127.0.0.1'

      - name: Check VPN Connection Status
        run: echo ${{  steps.connect_vpn.outputs.STATUS  }}

      - name:  Install dependencies
        run: pip install -r .github/requirements.txt

      - name: Determine which Alembic revision to jump to
        env:
          INPUT_DATABASE_URI: github.event.inputs.databaseUri
          INPUT_REVISION_ID: github.event.inputs.revisionId
        run: python .github/alembic_revision.py

      - name: Kill VPN Connection
        run: killall openvpn

